// Code generated by go-swagger; DO NOT EDIT.

package activities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/csmarchbanks/stravaql/strava/model"
)

// GetCommentsByActivityIDReader is a Reader for the GetCommentsByActivityID structure.
type GetCommentsByActivityIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommentsByActivityIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCommentsByActivityIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCommentsByActivityIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCommentsByActivityIDOK creates a GetCommentsByActivityIDOK with default headers values
func NewGetCommentsByActivityIDOK() *GetCommentsByActivityIDOK {
	return &GetCommentsByActivityIDOK{}
}

/* GetCommentsByActivityIDOK describes a response with status code 200, with default header values.

Comments.
*/
type GetCommentsByActivityIDOK struct {
	Payload []*model.Comment
}

func (o *GetCommentsByActivityIDOK) Error() string {
	return fmt.Sprintf("[GET /activities/{id}/comments][%d] getCommentsByActivityIdOK  %+v", 200, o.Payload)
}
func (o *GetCommentsByActivityIDOK) GetPayload() []*model.Comment {
	return o.Payload
}

func (o *GetCommentsByActivityIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommentsByActivityIDDefault creates a GetCommentsByActivityIDDefault with default headers values
func NewGetCommentsByActivityIDDefault(code int) *GetCommentsByActivityIDDefault {
	return &GetCommentsByActivityIDDefault{
		_statusCode: code,
	}
}

/* GetCommentsByActivityIDDefault describes a response with status code -1, with default header values.

Unexpected error.
*/
type GetCommentsByActivityIDDefault struct {
	_statusCode int

	Payload *model.Fault
}

// Code gets the status code for the get comments by activity Id default response
func (o *GetCommentsByActivityIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCommentsByActivityIDDefault) Error() string {
	return fmt.Sprintf("[GET /activities/{id}/comments][%d] getCommentsByActivityId default  %+v", o._statusCode, o.Payload)
}
func (o *GetCommentsByActivityIDDefault) GetPayload() *model.Fault {
	return o.Payload
}

func (o *GetCommentsByActivityIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
